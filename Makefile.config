# This is the Go4 Makefile configuration included by all package Makefiles 

ifeq ($(Go4_Makefile_Config),)

Go4_Makefile_Config = included

-include $(GO4SYS)/build/Makefile.gener

#################### This is generation of Makefile.gener file #################################

ifndef GO4_Configured

ifndef GO4_OS
GO4_OS = Linux
endif

ifneq ($(GO4_OS),Win32)
ifdef prefix
ifneq ($(wildcard $(prefix)),)
GO4PREFIX = $(prefix)
endif
endif
endif

ifdef GO4PREFIX
GO4TOPPATH = $(GO4PREFIX)/share/go4
GO4EXEPATH = $(GO4PREFIX)/bin
GO4LIBPATH = $(GO4PREFIX)/lib
GO4INCPATH = $(GO4PREFIX)/include/go4
else
GO4TOPPATH = $(CURDIR)
GO4EXEPATH = $(CURDIR)/bin
GO4LIBPATH = $(CURDIR)/lib
GO4INCPATH = $(CURDIR)/include
endif
ifndef GO4WITHRPATH
GO4WITHRPATH = true
endif

ifdef ROOTSYS
CFG_ROOT_BIN = $(ROOTSYS)/bin/
else
ifneq ($(shell which root-config 2>/dev/null),)
CFG_ROOT_BIN = $(shell root-config --exec-prefix)/bin/
else
error "No ROOT configured found"
endif
endif

ROOTEXEPATH = $(shell $(CFG_ROOT_BIN)root-config --exec-prefix)
ROOTINCPATH = $(shell $(CFG_ROOT_BIN)root-config --incdir)
ROOTLIBPATH = $(shell $(CFG_ROOT_BIN)root-config --libdir)
ROOTCFLAGS  = $(shell $(CFG_ROOT_BIN)root-config --cflags)
ROOTLIBS    = $(shell $(CFG_ROOT_BIN)root-config --libs)
ROOTGLIBS   = $(shell $(CFG_ROOT_BIN)root-config --glibs)

ifneq ($(wildcard $(ROOTLIBPATH)/libASImage.*),)
USEASIMAGE    = true
endif
ifneq ($(wildcard $(ROOTLIBPATH)/libSpectrum.*),)
USESPECTRUM   = true
endif
ifneq ($(wildcard $(ROOTLIBPATH)/libGed.*),)
USEGEDEDITOR  = true
endif
ifneq ($(wildcard $(ROOTLIBPATH)/libXMLIO.*),)
USEXMLIO      = true
endif

ifdef DIMDIR
ifneq ($(wildcard $(DIMDIR)/linux/libdim.so),)
USEDIM  = true
DIMLIBPATH = $(DIMDIR)/linux
DIMINCPATH = $(DIMDIR)/dim
endif
endif

ifeq ($(GO4_OS),Solaris)
GO4_WITH_RFIO = false
else
GO4_WITH_RFIO = true
endif


#try to detect which QT version is configured if any

ifeq ($(WITHQT),no)
CFG_WITHOUT_QT = true
endif

ifeq ($(GO4_OS),Win32)
ifndef QTDIR
CFG_WITHOUT_QT = true
endif
endif

ifndef CFG_WITHOUT_QT
  ifeq ($(WITHQT),3)
    ifneq ($(shell pkg-config --exists qt-mt --print-errors),)
      CFG_WITHOUT_QT = true
    endif
  else
  ifeq ($(WITHQT),4)
    ifneq ($(shell pkg-config --exists QtCore --print-errors),)
      CFG_WITHOUT_QT = true
    endif
  else
  ifdef QTDIR
    QTPATH = $(QTDIR)
    QTCXXFLAGS = 
    ifneq ($(shell $(QTDIR)/bin/qmake --version 2>&1 | grep "Qt 3."),)
       GO4_QT = 3
       QTCXXFLAGS += -DQT_SHARED -DQT_THREAD_SUPPORT -D_REENTRANT
    else
       GO4_QT = 4
       QTCXXFLAGS += -DQT_SHARED
    endif
    
    ifeq ($(GO4_OS),Win32)
      QTCXXFLAGS  += -I$(shell cygpath -w $(QTDIR)/include)
    else
      QTCXXFLAGS  += -I$(QTDIR)/include
    endif
  
  else
  
  ifeq ($(shell pkg-config --exists QtCore --print-errors),)
    WITHQT = 4
  else
  ifeq ($(shell pkg-config --exists qt-mt --print-errors),)
    WITHQT = 3
  else
    CFG_WITHOUT_QT = true
  endif
  endif
  endif
  endif
  endif

endif

ifndef CFG_WITHOUT_QT
  ifeq ($(WITHQT), 3)
    GO4_QT     = 3
    QTPATH     = $(shell pkg-config --variable=prefix qt-mt)
    QTCXXFLAGS =  $(shell pkg-config --cflags qt-mt)
  endif
  ifeq ($(WITHQT), 4)
    GO4_QT     = 4
    QTPATH     = $(shell pkg-config --variable=prefix QtCore)
    QTCXXFLAGS = $(shell pkg-config --cflags QtCore)
  endif
endif

# generate file only if we do not do something simple like clean
$(GO4SYS)/build/Makefile.gener:
	@rm -f $@
	@echo "#### Generated file, not change ###" >> $@
	@echo "GO4_Configured = true" >> $@
	@echo "GO4_OS       = $(GO4_OS)" >> $@
	@echo "GO4PREFIX    = $(GO4PREFIX)" >> $@
	@echo "GO4TOPPATH   = $(GO4TOPPATH)" >> $@
	@echo "GO4EXEPATH   = $(GO4EXEPATH)" >> $@
	@echo "GO4LIBPATH   = $(GO4LIBPATH)" >> $@
	@echo "GO4INCPATH   = $(GO4INCPATH)" >> $@
	@echo "GO4WITHRPATH = $(GO4WITHRPATH)" >> $@
	@echo "" >> $@
	@echo "#### ROOT configigurations from root-config" >> $@
	@echo "ROOTEXEPATH  = $(ROOTEXEPATH)" >> $@
	@echo "ROOTINCPATH  = $(ROOTINCPATH)" >> $@
	@echo "ROOTLIBPATH  = $(ROOTLIBPATH)" >> $@
	@echo "ROOTCFLAGS   = $(ROOTCFLAGS)" >> $@
	@echo "ROOTLIBS     = $(ROOTLIBS)" >> $@
	@echo "ROOTGLIBS    = $(ROOTGLIBS)" >> $@
	@echo "" >> $@
	@echo "#### Available ROOT components" >> $@
ifdef USEASIMAGE
	@echo "USEASIMAGE   = true" >> $@
endif
ifdef USESPECTRUM
	@echo "USESPECTRUM  = true" >> $@
endif
ifdef USEGEDEDITOR
	@echo "USEGEDEDITOR = true" >> $@
endif
ifdef USEXMLIO
	@echo "USEXMLIO     = true" >> $@
endif
	@echo "" >> $@
	@echo "### some other packets" >> $@
ifdef USEDIM
	@echo "USEDIM     = true" >> $@
	@echo "DIMLIBPATH = $(DIMLIBPATH)" >> $@
	@echo "DIMINCPATH = $(DIMINCPATH)" >> $@
endif
	@echo "GO4_WITH_RFIO = $(GO4_WITH_RFIO)" >> $@
ifndef CFG_WITHOUT_QT
	@echo "" >> $@
	@echo "### Qt relevant settings" >> $@
	@echo "GO4_QT     = $(GO4_QT)" >> $@
	@echo "QTPATH     = $(QTPATH)" >> $@
	@echo "QTCXXFLAGS = $(QTCXXFLAGS)" >> $@
endif

endif
#################### end of generation of Makefile.gener file #################################


ifeq ($(GO4_OS), Win32)
GO4_WIN32 = true
endif

include $(GO4SYS)/build/Makefile.$(GO4_OS)


#### File suffixes: ###
SrcSuf        = cxx
CSuf          = c
HedSuf        = h 
DepSuf        = d

#file prefixes
DICT_PREFIX   = G__
LIB_PREFIX    = lib

#### Library version numbers: ###
MAJOR         = 4
MINOR         = 3.2
VERSSUF       = $(MAJOR).$(MINOR)

#### Go4 general build flags: ###

# switch on optimization for all object files
DOOPTIMIZATION = true

ifdef GO4PACKAGE
INCLUDES = -Iinclude -I.
else
ifdef GO4PREFIX
INCLUDES = -I$(GO4INCPATH)
else
INCLUDES = -I$(GO4SYS)/include
#this is for very old user code, when go4/include was not exists
INCLUDES += -I$(GO4SYS)
endif
endif

#### Combine compilers flags in one variable: ###
CXXFLAGS  =  $(OPTIONS) $(EXTRACXXOPTIONS) $(DEFINITIONS) $(ROOTCFLAGS) $(INCLUDES)

CFLAGS    = $(OPTIONS) $(EXTRACOPTIONS) $(DEFINITIONS) $(INCLUDES)

LDRPATHS = $(ROOTLIBPATH) $(GO4LIBPATH) .


#QT relevant variables
ifdef GO4_QT

QMAKE         = $(QTPATH)/bin/qmake
UIC           = $(QTPATH)/bin/uic
MOC           = $(QTPATH)/bin/moc

ifndef USEGEDEDITOR
QTGO4DEFINITIONS += -D__NOGO4GED__
endif

ifndef USEASIMAGE
QTGO4DEFINITIONS += -D__NOGO4ASI__
endif

ifdef USEDIM
QTGO4DEFINITIONS += -D__GO4DIM__
endif

QTCXXFLAGS    += $(QTGO4DEFINITIONS)

QMAKEOPTFLAG  = "CONFIG+=release"
QMAKEFLAGS    = "QMAKE_CXXFLAGS=$(WARNINGS) $(QTGO4DEFINITIONS)" "QMAKE_CXXFLAGS_RELEASE = -O2" "QMAKE_CFLAGS_RELEASE = -O2"

ifeq ($(GO4_OS),Win32)
QMAKEFLAGS   += "INCLUDEPATH+=$(shell cygpath -w $(ROOTINCPATH))" "DEPENDPATH+=$(shell cygpath -w $(ROOTINCPATH))"
MAKEFORQT    = nmake
else
QMAKEFLAGS   += "INCLUDEPATH+=$(ROOTINCPATH)" "DEPENDPATH+=$(ROOTINCPATH)"
MAKEFORQT    = $(MAKE)
endif

endif


### library load path:

#root tools for file generations

ifdef GO4PACKAGE
GO4DLLPATH  = lib
else
GO4DLLPATH  = $(GO4LIBPATH)
endif

ifeq ($(GO4_OS),Win32)
ROOTCINTGO4   = echo "Generating dictionary $@ ..."; rootcint -f $@ -c -I'$(GO4SYS)/include' $(DEFINITIONS)
RLIBMAP       = rlibmap
else
ROOTCINTGO4   = echo "Generating dictionary $@ ..."; $(ROOTEXEPATH)/bin/rootcint -f $@ -c -p $(INCLUDES) $(DEFINITIONS)
RLIBMAP       = $(ROOTEXEPATH)/bin/rlibmap
endif

### library load path:

ROOTMAPNAME   = .rootmap
GO4MAP        = $(GO4SYS)/$(ROOTMAPNAME)
DOMAP         = true

# Go4 build scripts

MakeDepend    = $(GO4SYS)/build/depend.sh $(ObjSuf)

MakeLibrary   = $(GO4SYS)/build/makelib.sh $(GO4_OS) "$(LD)" "$(RM)" "$(MV)" "$(LN)" "$(RLIBMAP)" "$(LDFLAGS)" "$(SOFLAGS)" $(DllSuf) "---"

CleanLib      = $(GO4SYS)/build/cleanlib.sh $(GO4_OS) "$(RM)" $(DllSuf)

#this is for compatibility with old makefile, 
#where version suffix is required for library file
#all new makefiles should use MakeLibrary call
MakeLib       = $(GO4SYS)/build/makelib.sh $(GO4_OS) "$(LD)" "$(RM)" "$(MV)" "$(LN)" "$(RLIBMAP)" "$(LDFLAGS)" "$(SOFLAGS)" $(DllSuf) $(VERSSUF)

#Also kept for compatibility with old makefiles, 
#now rootmap will be produced by makelib call 
MakeMap       = $(GO4SYS)/build/makemap.sh $(GO4_OS) $(RLIBMAP)


# files sets

GO4QTMAIN    	:=
GO4QTHEADS     :=
LIBDEPENDENC    :=

EXAMPDEPENDENCS :=
EXAMPLEEXECS    :=

DISTRFILES      :=

#rules wich does not require any dependency checks
FASTRULES       = package setup clean clean-bin map

ifneq ($(findstring $(MAKECMDGOALS), package),)
DOPACKAGE = true
endif

ifeq ($(GO4_OS),Win32)

LIBS_THRDMANSET = $(ROOTLIBS) \
                  $(if $(USEXMLIO),libXMLIO.lib,) \
                  '$(GO4SYS)\lib\libGo4Base.lib' \
                  '$(GO4SYS)\lib\libGo4ThreadManager.lib' \

LIBS_TASKHANDSET = $(LIBS_THRDMANSET) \
                   '$(GO4SYS)\lib\libGo4TaskHandler.lib' \

LIBS_FULLSET = $(ROOTLIBS) \
               $(if $(USEXMLIO),libXMLIO.lib,) \
               '$(GO4SYS)\lib\libGo4Fit.lib' \
               '$(GO4SYS)\lib\libGo4Base.lib' \
               '$(GO4SYS)\lib\libGo4ThreadManager.lib' \
               '$(GO4SYS)\lib\libGo4TaskHandler.lib' \
               '$(GO4SYS)\lib\libGo4AnalBase.lib' \
               '$(GO4SYS)\lib\libGo4Analysis.lib' \
               '$(GO4SYS)\Go4Analysis\TGo4Version.obj'

LIBS_GUISET =  $(ROOTGLIBS) \
               $(if $(USEXMLIO), libXMLIO.lib,) \
               $(if $(USESPECTRUM), libSpectrum.lib,) \
               $(if $(USEASIMAGE), libASImage.lib,) \
               $(if $(USEGEDEDITOR), libGed.lib libTreePlayer.lib,) \
               libGo4Fit.lib \
               libGo4Base.lib \
               libGo4ThreadManager.lib \
               libGo4TaskHandler.lib \
               libGo4AnalBase.lib \
               libGo4Analysis.lib \
               ..\..\Go4Analysis\TGo4Version.obj \
               libGo4GUI.lib

else

LIBS_THRDMANSET = $(ROOTLIBS) \
                   -lThread \
                    $(if $(USEXMLIO),-lXMLIO,) \
                   -lpthread \
                   -L$(GO4DLLPATH) \
                   -lGo4Base \
                   -lGo4ThreadManager

LIBS_TASKHANDSET = $(LIBS_THRDMANSET) \
                   -lGo4TaskHandler

LIBS_FULLSET = $(ROOTLIBS) \
               -lMinuit \
               -lThread \
               -lpthread \
               -lrt \
               $(if $(USEXMLIO),-lXMLIO,) \
               $(if $(USESPECTRUM),-lSpectrum,) \
               -L$(GO4DLLPATH) \
               -lGo4Fit \
               -lGo4Base \
               -lGo4ThreadManager \
               -lGo4TaskHandler \
               -lGo4AnalBase \
               -lGo4Analysis \
               $(GO4SYS)/Go4Analysis/TGo4Version.$(ObjSuf)

LIBS_GUISET   = $(ROOTGLIBS) \
               -lMinuit \
               -lThread \
               -lpthread \
               $(if $(USEXMLIO),-lXMLIO,) \
               $(if $(USESPECTRUM),-lSpectrum,) \
               $(if $(USEASIMAGE),-lASImage,) \
               $(if $(USEGEDEDITOR),-lGed -lTreePlayer,) \
               $(if $(USEDIM),-L$(DIMLIBPATH) -ldim,) \
               -L../../lib \
               -lGo4Fit \
               -lGo4Base \
               -lGo4ThreadManager \
               -lGo4TaskHandler \
               -lGo4AnalBase \
               -lGo4GUI

endif

BASIC_LIB_DEP = $(if $(USEASIMAGE),$(ROOTLIBPATH)/libASImage.$(DllSuf),) \
                $(if $(USESPECTRUM),$(ROOTLIBPATH)/libSpectrum.$(DllSuf),) \
                $(if $(USEXMLIO),$(ROOTLIBPATH)/libXMLIO.$(DllSuf),) \
                $(ROOTLIBPATH)/libGpad.$(DllSuf) \
                $(ROOTLIBPATH)/libTree.$(DllSuf) \
                $(ROOTLIBPATH)/libMinuit.$(DllSuf) \
                $(ROOTLIBPATH)/libThread.$(DllSuf)

ANAL_LIB_DEP = $(GO4SYS)/lib/libGo4Analysis.$(DllSuf) \
               $(GO4SYS)/lib/libGo4AnalBase.$(DllSuf) \
               $(GO4SYS)/lib/libGo4Version.$(DllSuf) \
               $(GO4SYS)/lib/libGo4TaskHandler.$(DllSuf) \
               $(GO4SYS)/lib/libGo4ThreadManager.$(DllSuf) \
               $(GO4SYS)/lib/libGo4Base.$(DllSuf) \
               $(GO4SYS)/lib/libGo4Fit.$(DllSuf) \
               $(BASIC_LIB_DEP)

# for very old make files
MAKEDEP       = rmkdepend
GO4LIBS       = $(LIBS_FULLSET)
GO4PATH       = -L$(GO4DLLPATH)

endif