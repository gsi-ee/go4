include Makefile.config

GO4PACKAGE = go4taskhandler

GO4BASE_LIBNAME = $(LIB_PREFIX)Go4Base
GO4BASE_LIB     = $(GO4DLLPATH)/$(GO4BASE_LIBNAME).$(DllSuf)

THRDMNGR_LIBNAME= $(LIB_PREFIX)Go4ThreadManager
THRDMNGR_LIB    = $(GO4DLLPATH)/$(THRDMNGR_LIBNAME).$(DllSuf)

GO4TSKH_LIBNAME = $(LIB_PREFIX)Go4TaskHandler
GO4TSKH_LIB     = $(GO4DLLPATH)/$(GO4TSKH_LIBNAME).$(DllSuf)

BUILDGO4LIBS = $(GO4BASE_LIB) \
               $(THRDMNGR_LIB) \
               $(GO4TSKH_LIB)

MODULES  = Go4Exceptions Go4LockGuard Go4Log \
           Go4ThreadManager Go4ThreadManagerExample \
           Go4Queue Go4Socket Go4StatusBase \
           Go4CommandsBase Go4CommandsTaskHandler \
           Go4TaskHandler Go4TaskHandlerExample

EXMODULES = Go4ThreadManagerExample Go4TaskHandlerExample 

all:          libs examples 

.PHONY:         all libs examples \
                clean clean-ex clean-bak clean-obj package \
                $(patsubst %,all-%,$(MODULES)) \
                $(patsubst %,clean-%,$(MODULES)) \
                $(patsubst %,clean-obj-%,$(MODULES))

include $(patsubst %,%/Module.mk,$(MODULES))


build/dummy.d: Makefile $(ALLHDRS) $(GO4MAP) 
	@(if [ ! -f $@ ] ; then touch $@; fi)
	@(if [ ! -f lib ] ; then mkdir -p lib; fi)
	@(if [ ! -f bin ] ; then mkdir -p bin; fi)

$(GO4MAP):
   @(if [ ! -f $@ ] ; then touch $@; fi)

libs:        $(BUILDGO4LIBS)         

examples:    $(patsubst %,all-%,$(EXMODULES)) $(EXAMPLEEXECS)

clean:     $(patsubst %,clean-%,$(MODULES))
	@rm -f $(GO4MAP)
	@$(CleanLib) $(GO4BASE_LIBNAME) $(GO4DLLPATH)
	@$(CleanLib) $(GO4TSKH_LIBNAME) $(GO4DLLPATH)
	@echo "Clean go4 taskhandeler done"

clean-obj: $(patsubst %,clean-obj-%,$(MODULES))
	@$(CleanLib) $(GO4BASE_LIBNAME) $(GO4DLLPATH)
	@$(CleanLib) $(GO4TSKH_LIBNAME) $(GO4DLLPATH)
	@echo "Clean go4 taskhandeler object files done"

clean-ex:  $(patsubst %,clean-%,$(EXMODULES))
	@echo "Clean taskhandeler examples done"

clean-bak:
	@echo "Delete bak files"
	@rm -f $(patsubst %,%/*.bak,$(MODULES))
	@rm -f $(patsubst %,%/*.*~,$(MODULES))

GO4BASE_O = $(LOCKGRD_O) $(LOCKGRD_DO) \
            $(GO4LOG_O) $(GO4LOG_DO) \
            $(EXCEPT_O) \
            $(COMBASE_O) $(COMBASE_DO) \
            $(STATBASE_O) $(STATBASE_DO)

GO4BASE_LINKDEFS = $(LOCKGRD_LINKDEF) \
                   $(GO4LOG_LINKDEF) \
                   $(COMBASE_LINKDEF) \
                   $(STATBASE_LINKDEF) \
                   $(CONDBASE_LINKDEF)

GO4TSKH_O = $(GO4SOCKET_O) \
            $(GO4QUEUE_O) \
            $(TASKHAND_O) $(TASKHAND_DO) \
            $(CMDTASKHANDL_O) $(CMDTASKHANDL_DO)

GO4TSKH_LINKDEFS = $(TASKHAND_LINKDEF) \
                   $(CMDTASKHANDL_LINKDEF)

$(GO4BASE_LIB):   $(GO4BASE_O)
		@$(MakeLibrary) $(GO4BASE_LIBNAME) "$(GO4BASE_O)" $(GO4DLLPATH) "$(GO4BASE_LINKDEFS)" "$(BASIC_LIB_DEP)"

$(THRDMNGR_LIB):   $(THRDMNGR_O) $(THRDMNGR_DO)
		@$(MakeLibrary) $(THRDMNGR_LIBNAME) "$(THRDMNGR_O) $(THRDMNGR_DO)" $(GO4DLLPATH) $(THRDMNGR_LINKDEF) "$(GO4BASE_LIB) $(BASIC_LIB_DEP)"

$(GO4TSKH_LIB):   $(GO4TSKH_O)
		@$(MakeLibrary) $(GO4TSKH_LIBNAME) "$(GO4TSKH_O)" $(GO4DLLPATH) "$(GO4TSKH_LINKDEFS)" "$(THRDMNGR_LIB) $(GO4BASE_LIB) $(BASIC_LIB_DEP)"

include Makefile.rules

ifeq ($(findstring $(MAKECMDGOALS), $(FASTRULES)),)
-include build/dummy.d
endif
