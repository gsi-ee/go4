## Include dependencies rules, working only on linux

ifeq ($(Go4_Makefile_Rules),)

Go4_Makefile_Rules = included

ifdef LIBDEPENDENC
ifeq ($(findstring $(MAKECMDGOALS), examples $(FASTRULES)),)
-include $(LIBDEPENDENC)
endif
endif

ifdef EXAMPDEPENDENCS
ifeq ($(findstring $(MAKECMDGOALS), libs gui $(FASTRULES)),)
-include $(EXAMPDEPENDENCS)
endif
endif

ifeq ($(DOOPTIMIZATION), false)
OPTFLAGS = $(DEBUGMODE)
else
OPTFLAGS = $(OPTIMIZEMODE)
endif


## Extensions rules

.SUFFIXES: .$(SrcSuf) .$(DepSuf) .$(HedSuf)

%.$(ObjSuf): %.$(SrcSuf)
	$(CXX) -c $< $(OPTFLAGS) $(CXXFLAGS) -o $@ 

%.$(ObjSuf): %.$(CSuf)
	$(CC) -c $< $(OPTFLAGS) $(CFLAGS) -o $@

%.$(DepSuf): %.$(SrcSuf)
	@echo "Generate dependency $@ ... "
	@$(MakeDepend) $@ "$(CXXFLAGS)" $*.$(SrcSuf) > $@

%.$(DepSuf): %.$(CSuf)
	@echo "Generate dependency $@ ... "
	@$(MakeDepend) $@ "$(CFLAGS)" $*.$(CSuf) > $@


ifndef GO4_WITHOUT_QT

#dependency and Qt staff generation works only on linux

%.$(ObjSuf): %.cpp
	$(CXX) -c $< $(OPTFLAGS) $(CXXFLAGS) $(QTCXXFLAGS) -o $@ 

ifndef GO4_QT4

$(GO4SYS)/%.h: $(GO4SYS)/%.ui
	@echo "Generate Go4 Qt header $@ ... "
	@$(UIC) $< -o $@
	@cp -f $@ $(GO4SYS)/include

%.h: %.ui
	@echo "Generate Qt header here $@ ... "
	@$(UIC) $< -o $@

endif

%.d: %.cpp
	@echo "Generate dependency $@ ... "
	@$(MakeDepend) $@ "$(CXXFLAGS) $(QTCXXFLAGS)" $*.cpp > $@

endif

endif